!function(){"use strict";var e="";const t={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},r=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},o=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?n(t,r):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))},n=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},a=e=>{document.querySelectorAll(e.formSelector).forEach((t=>{((e,t)=>{const n=e.querySelector(t.submitButtonSelector),a=Array.from(e.querySelectorAll(t.inputSelector));o(a,n,t),a.forEach((c=>{c.addEventListener("input",(function(){((e,t,o)=>{t.validity.valid?r(e,t,o):((e,t,r,o)=>{e.querySelector(`#${t.id}-error`).textContent=r,t.classList.add(o.inputErrorClass)})(e,t,t.validationMessage,o)})(e,c,t),o(a,n,t)}))}))})(t,e)}))};a(t);var c=e+"d3610e9c6dce3cb370d8.svg",s=e+"2fc47fd8e9a9bcd9612f.jpg",l=e+"d38272e02bb4f1ab1c37.svg",d=e+"40608da7369d39bc1077.svg",i=e+"e42436bfddd4005c65d7.png";function u(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";e.textContent=t?o:r}document.getElementById("spots-logo").src=c;const m=document.getElementById("profile-avatar");m.src=s,document.getElementById("profile-pencil-icon").src=l,document.getElementById("profile-avatar-pencil-icon").src=i,document.getElementById("plus-icon").src=d;const _=document.querySelectorAll(".modal"),h=document.querySelector(".profile__edit-button"),f=document.querySelector(".profile__name"),v=document.querySelector(".profile__description"),y=document.querySelector("#edit-profile-modal"),p=y.querySelector("#modal__form"),b=y.querySelector("#profile-name-input"),S=y.querySelector("#profile-description-input"),E=document.querySelector(".profile__avatar-btn"),q=document.querySelector("#card-template"),k=document.querySelector(".cards__list"),g=document.querySelector("#add-card-modal"),L=document.querySelector(".profile__add-button"),C=g.querySelector(".modal__form"),$=(document.querySelector(".card__like-button"),g.querySelector("#add-card-link-input")),j=g.querySelector("#add-card-name-input"),I=g.querySelector(".modal__submit-button"),x=document.querySelector("#preview__modal"),U=x.querySelector(".modal__image"),A=x.querySelector(".modal__caption"),P=document.querySelector("#edit-avatar-modal"),B=P.querySelector(".modal__form"),D=(P.querySelector(".modal__submit-button"),P.querySelector("#profile-avatar-input")),T=document.querySelector("#delete-card-modal"),w=T.querySelector(".modal__form"),N=document.querySelectorAll(".modal__close-button"),O=document.querySelectorAll(".modal__outter_close-button"),J=document.querySelector(".modal__cancel-button");let H,z,M;const F=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo(),this.editUserInfo])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}getUserInfo(){return fetch("https://around-api.en.tripleten-services.com/v1/users/me",{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}editAvatarInfo(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}addCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}changeLikeStatus(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"e11ddd60-2205-47cc-82fc-4d65d6c884b9","Content-Type":"application/json"}});function G(e){const t=q.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),o=t.querySelector(".card__image"),n=t.querySelector(".card__like-button"),a=t.querySelector(".card__delete-button");return e.isLiked&&n.classList.add("card__like-button_liked"),r.textContent=e.name,o.src=e.link,o.alt=e.name,o.addEventListener("click",(()=>{K(x),U.src=e.link,A.textContent=e.name,U.alt=e.name})),n.addEventListener("click",(t=>{!function(e,t){const r=e.target.classList.contains("card__like-button_liked");F.changeLikeStatus(t,r).then((t=>{e.target.classList.toggle("card__like-button_liked")})).catch(console.error)}(t,e._id)})),a.addEventListener("click",(r=>{!function(e,t){H=e,z=t,K(T)}(t,e._id)})),t}function K(e){e.classList.add("modal_opened"),document.addEventListener("keydown",R)}function Q(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",R)}function R(e){"Escape"===e.key&&Q(document.querySelector(".modal_opened"))}F.getAppInfo().then((e=>{let[t,r]=e;M=r._id,t.forEach((e=>{const t=G(e);k.prepend(t)})),m.src=r.avatar,f.textContent=r.name,v.textContent=r.about})).catch(console.error),N.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>Q(t)))})),O.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>Q(t)))})),h.addEventListener("click",(()=>{var e;b.value=f.textContent,S.value=v.textContent,e=p,[b,S].forEach(((t,o)=>{r(e,t,o)})),K(y)})),p.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;u(t,!0),F.editUserInfo({name:b.value,about:S.value}).then((e=>{f.textContent=e.name,v.textContent=e.about,Q(y)})).catch(console.error).finally((()=>{t.textContent="Save"}))})),L.addEventListener("click",(()=>{K(g)})),C.addEventListener("submit",(function(e){e.preventDefault();const r=e.submitter;u(r,!0);const o={name:j.value,link:$.value};F.addCard(o).then((e=>{const t=G(e);k.prepend(t),C.reset(),Q(g)})).catch((e=>{console.error(e)})).finally((()=>{n(I,t),r.textContent="Save"}))})),E.addEventListener("click",(()=>{K(P)})),B.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;u(t,!0),F.editAvatarInfo(D.value).then((e=>{m.src=e.avatar,Q(P)})).catch(console.error).finally((()=>{t.textContent="Save"}))})),w.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;u(t,!0,"Delete","Deleting..."),F.deleteCard(z).then((()=>{H.remove(),Q(T)})).catch(console.error).finally((()=>{t.textContent="Delete"}))})),_.forEach((e=>{e.addEventListener("click",(function(t){t.target.classList.contains("modal")&&Q(e)}))})),_.forEach((e=>{J.addEventListener("click",(function(t){t.target.classList.contains("modal__cancel-button")&&Q(e)}))})),a(t)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,